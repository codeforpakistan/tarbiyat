# Generated by Django 5.2.4 on 2025-07-26 10:00

import app.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0004_company_approved_at_company_approved_by_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='InternshipSupervisorEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nanoid', models.CharField(db_index=True, default=app.models.generate_nanoid, editable=False, max_length=12, unique=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('technical_skills', models.IntegerField(choices=[(1, 'Does not meet expectations'), (2, 'Inconsistently meets expectations'), (3, 'Consistently meets expectations'), (4, 'Above expectations')], help_text='Technical competency and ability to learn/apply new skills')),
                ('work_quality', models.IntegerField(choices=[(1, 'Does not meet expectations'), (2, 'Inconsistently meets expectations'), (3, 'Consistently meets expectations'), (4, 'Above expectations')], help_text='Quality and accuracy of work, attention to detail')),
                ('problem_solving', models.IntegerField(choices=[(1, 'Does not meet expectations'), (2, 'Inconsistently meets expectations'), (3, 'Consistently meets expectations'), (4, 'Above expectations')], help_text='Ability to analyze problems and find solutions')),
                ('teamwork', models.IntegerField(choices=[(1, 'Does not meet expectations'), (2, 'Inconsistently meets expectations'), (3, 'Consistently meets expectations'), (4, 'Above expectations')], help_text='Collaboration, communication, and interpersonal skills')),
                ('professionalism', models.IntegerField(choices=[(1, 'Does not meet expectations'), (2, 'Inconsistently meets expectations'), (3, 'Consistently meets expectations'), (4, 'Above expectations')], help_text='Punctuality, reliability, and professional conduct')),
                ('performance_benefits', models.TextField(help_text="Describe the ways in which the intern's performance benefited your organization")),
                ('observed_development', models.TextField(help_text="What development have you observed in the student's skills, knowledge, personal and/or professional performance?")),
                ('intern_strengths', models.TextField(help_text="What do you consider to be the intern's strengths?")),
                ('areas_for_improvement', models.TextField(help_text='In what areas does the intern need to improve?')),
                ('intern_rating', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('average', 'Average'), ('poor', 'Poor')], help_text='Overall, how do you rate your experience with this intern?', max_length=10)),
                ('program_rating', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('average', 'Average'), ('poor', 'Poor')], help_text='Overall, how do you rate your experience with this internship program?', max_length=10)),
                ('program_improvement_suggestions', models.TextField(help_text='What are your suggestions for improving the internship program?')),
                ('would_recommend', models.BooleanField(help_text='Based on your experience, would you supervise other interns or recommend the internship program to others?')),
                ('additional_comments', models.TextField(blank=True, help_text='Do you have any other comments that will help the institute and our students?', null=True)),
                ('internship', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='supervisor_evaluation', to='app.internship')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.mentorprofile')),
            ],
            options={
                'verbose_name': 'Internship Supervisor Evaluation',
                'verbose_name_plural': 'Internship Supervisor Evaluations',
            },
        ),
        migrations.CreateModel(
            name='StudentWeeklyActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nanoid', models.CharField(db_index=True, default=app.models.generate_nanoid, editable=False, max_length=12, unique=True)),
                ('week_starting', models.DateField(help_text='Starting date of the week')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_activity_logs', to='app.internship')),
            ],
            options={
                'verbose_name': 'Student Weekly Activity Log',
                'verbose_name_plural': 'Student Weekly Activity Logs',
                'ordering': ['-week_starting'],
                'unique_together': {('internship', 'week_starting')},
            },
        ),
        migrations.CreateModel(
            name='StudentWeeklyActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_description', models.TextField(help_text='Description of the task or activity performed')),
                ('hours_spent', models.DecimalField(decimal_places=1, help_text='Number of hours spent on this activity (max 60 per activity)', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('date_performed', models.DateField(help_text='Date when the activity was performed')),
                ('activity_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='app.studentweeklyactivitylog')),
            ],
            options={
                'verbose_name': 'Weekly Activity Entry',
                'verbose_name_plural': 'Weekly Activity Entries',
                'ordering': ['date_performed'],
            },
        ),
        migrations.CreateModel(
            name='StudentInternshipReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nanoid', models.CharField(db_index=True, default=app.models.generate_nanoid, editable=False, max_length=12, unique=True)),
                ('report_month', models.DateField(help_text='Month and year for this report')),
                ('tasks_performed', models.TextField(help_text='Major duties designated and assignments completed by the student')),
                ('tasks_performed_score', models.IntegerField(help_text='Score for tasks performed (0-10)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('learning_experience', models.TextField(help_text='Skills and knowledge gained or refined through the internship')),
                ('learning_experience_score', models.IntegerField(help_text='Score for learning experience (0-10)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('challenges', models.TextField(help_text='Major challenges faced and how they were tackled')),
                ('challenges_score', models.IntegerField(help_text='Score for handling challenges (0-10)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('additional_comments', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_reports', to='app.internship')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.teacherprofile')),
            ],
            options={
                'ordering': ['-report_month'],
                'unique_together': {('internship', 'report_month')},
            },
        ),
    ]
